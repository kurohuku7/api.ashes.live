"""Make name_ja nullable

Revision ID: 60ab130e62c5
Revises: c1d8d8b6925f
Create Date: 2025-04-12 04:07:54.375944+00:00

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "60ab130e62c5"
down_revision = "c1d8d8b6925f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "ashes500_revision",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('ashes500_revision_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "ashes500_revision",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_revision",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "ashes500_value",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "ashes500_value",
        "card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_value",
        "revision_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_value",
        "combo_card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.add_column("card", sa.Column("name_ja", sa.String(length=30), nullable=True))
    op.alter_column(
        "card",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('card_id_seq'::regclass)"),
    )
    op.alter_column(
        "card",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "card",
        "release_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card",
        "version",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        existing_server_default=sa.text("'1'::bigint"),
    )
    op.alter_column(
        "card",
        "cost_weight",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "card",
        "dice_flags",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card",
        "alt_dice_flags",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card_conjuration",
        "card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "card_conjuration",
        "conjuration_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "comment",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "source_entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "source_version",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "ordering_increment",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "modified",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('deck_id_seq'::regclass)"),
    )
    op.alter_column(
        "deck",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck",
        "preconstructed_release",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "modified",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "ashes_500_score",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "ashes_500_revision_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "source_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck",
        "phoenixborn_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck_card",
        "deck_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_card",
        "card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_die",
        "deck_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_die",
        "die_flag",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_selected_card",
        "deck_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_selected_card",
        "card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_selected_card",
        "tutor_card_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "invite",
        "requests",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "invite",
        "requested",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "phoenix_dice",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "phoenix_dice",
        "desired_sets",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "phoenix_dice",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "post",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "post",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "section_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "post",
        "modified",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "releases",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('releases_id_seq'::regclass)"),
    )
    op.alter_column(
        "section",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "section",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "stream",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "stream",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "stream",
        "source_entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "stream",
        "posted",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "streamable",
        "entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "subscription",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "subscription",
        "source_entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "subscription",
        "last_seen_entity_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('user_id_seq'::regclass)"),
    )
    op.alter_column(
        "user",
        "created",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "modified",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_release",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_release",
        "release_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_release",
        "release_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_release",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "modified",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('user_id_seq'::regclass)"),
    )
    op.alter_column(
        "subscription",
        "last_seen_entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "subscription",
        "source_entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "subscription",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "streamable",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "stream",
        "posted",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "stream",
        "source_entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "stream",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "stream",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "section",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "section",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "releases",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('releases_id_seq'::regclass)"),
    )
    op.alter_column(
        "post",
        "modified",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "post",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "post",
        "section_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "post",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "phoenix_dice",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "phoenix_dice",
        "desired_sets",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "phoenix_dice",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "invite",
        "requested",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "invite",
        "requests",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_selected_card",
        "tutor_card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "deck_selected_card",
        "card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_selected_card",
        "deck_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_die",
        "die_flag",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_die",
        "deck_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_card",
        "card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck_card",
        "deck_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck",
        "phoenixborn_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck",
        "source_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "ashes_500_revision_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "ashes_500_score",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "modified",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "preconstructed_release",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "deck",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "deck",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('deck_id_seq'::regclass)"),
    )
    op.alter_column(
        "comment",
        "modified",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "ordering_increment",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "source_version",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "source_entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "comment",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "card_conjuration",
        "conjuration_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "card_conjuration",
        "card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "card",
        "alt_dice_flags",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card",
        "dice_flags",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card",
        "cost_weight",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "card",
        "version",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        existing_server_default=sa.text("'1'::bigint"),
    )
    op.alter_column(
        "card",
        "release_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        existing_server_default=sa.text("'0'::bigint"),
    )
    op.alter_column(
        "card",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "card",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('card_id_seq'::regclass)"),
    )
    op.drop_column("card", "name_ja")
    op.alter_column(
        "ashes500_value",
        "combo_card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=True,
    )
    op.alter_column(
        "ashes500_value",
        "revision_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_value",
        "card_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_value",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "ashes500_revision",
        "created",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "ashes500_revision",
        "entity_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "ashes500_revision",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('ashes500_revision_id_seq'::regclass)"
        ),
    )
    # ### end Alembic commands ###
